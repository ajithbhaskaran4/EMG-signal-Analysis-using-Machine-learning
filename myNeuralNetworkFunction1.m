function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 03-May-2018 18:34:45.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx21 matrix, input #1
% and returns:
%   y = Qx3 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.keep = [1 2 3 4 5 6 7 8 9 10 12 13 14 15 16 18 19 20 21];
x1_step2.xoffset = [-15.7595646246855;-15.7595646246855;-15.7595646246855;-15.7595646246855;-15.7595646246855;-15.7595646246855;-15.7595646246855;-15.7595646246855;-15.7595646246855;-15.7595646246855;-19.208211143695;-19.208211143695;-19.208211143695;-19.208211143695;-19.208211143695;-18.2133564851081;-18.2133564851081;-25.9894574512358;25.0999733404425];
x1_step2.gain = [0.064876254453259;0.0653893999687085;0.0653893999687085;0.0653893999687085;0.0653893999687085;0.0653893999687085;0.064731117418688;0.064731117418688;0.064731117418688;0.064731117418688;0.0507063197026022;0.0507063197026022;0.0507063197026022;0.0507063197026022;0.0507063197026022;0.0498446330510827;0.0498446330510827;0.0411005816564681;0.146332899869961];
x1_step2.ymin = -1;

% Layer 1
b1 = [1.5082716907270111;-1.2882464568742187;0.56927476921835207;-5.6266405615281361;3.1328959340450528;-0.49753704785887387;1.2014373057644931;-0.34823983338875031;0.58209298362178397;-1.2939602016750058];
IW1_1 = [-0.23732170424886082 0.59755404139667034 0.095532932259853265 -0.34528133582168097 -0.53129255386330099 -0.34272255153115078 0.54071302684259948 0.50209049309855569 0.4304752434282379 -0.048300239674870696 -0.22354455909453905 0.37554028611457679 -0.37758401806150577 0.13320316399488552 -0.18211121276065537 0.43969923816062817 0.66731547784623468 -0.32088940634393343 -0.021025149700684163;0.28254682777231371 0.071745274454302232 0.23706815999416428 0.20663791186215624 -0.50444792083253287 -0.4732182815940677 0.0053294155129734455 -0.13156742671113589 0.27869421375444081 0.25114421793502906 -0.31422707590952637 -0.33802144623595931 -0.14079362620798949 -0.31835017823392064 0.45086444130428144 -0.26567199486499249 0.38029185043785663 0.056391039115764333 -1.1077632357481346;-1.2524244648121707 1.1999068644357054 -1.0596843318271159 0.79442850440627932 0.29692036666611704 -0.14503553987717616 0.097959342743565894 0.35334751612179671 0.1833350681004558 -0.043448060818643587 -0.36534046036944712 -0.78369570572876013 0.47269482601624963 0.80860263696347856 0.48021855362539456 0.023456548605068413 -0.53018398421904056 0.20292408814371193 -0.47738052390559577;0.089259453743534056 -0.00031155684831655692 -0.082239855426267827 0.015347278509004822 0.45025561800168251 0.34785192810289101 0.089826171990111933 0.19874498105066565 0.33169280007389446 0.2514963142403685 -0.026076327746426958 -0.15897151372803545 -1.4215305222409571 -0.015506999768556308 0.079384537733315289 -0.19341642812955079 -0.93993542107130035 -0.25892789002188443 -6.3532965073064949;-0.10973131869555554 0.14925025033902822 0.043516468468714237 0.059890097369765159 0.32103103412285861 0.091314401794571801 0.20883795069206945 0.20907905443358085 0.42186692352709709 0.10594595691895042 -0.12715562593938906 -0.23389267742885064 0.9995480962115415 -0.17132935209306291 0.055873672523513961 -0.38336319382814016 0.69961561808609218 0.061886433134593577 3.8653715115035028;0.16344088564571868 1.2458976157147077 0.28253064638441339 -0.36584295603488054 -0.14331737794501007 -0.57868341787354605 -0.49826661528894167 -0.076936954076497505 0.55467212202491767 0.85649835044565537 0.54211186341222584 -1.0818918661154788 0.8022397216193603 0.097513574375165918 0.10425245213684543 -0.41354456417330937 0.33834764138403328 -0.00021153989704762212 0.56815070529774281;0.29410793820687475 -0.33665937919515393 -0.35218383138681925 -0.34767651698299618 0.58198140405880971 -0.093071051158677379 -0.51989820349507732 0.20005273701537538 -0.31796298575406146 -0.20474385339973949 -0.48102190358974728 -0.38543000902970953 -0.0060744695637947824 0.2510359888954678 -0.38787498348561816 -0.055732723612741675 -0.18403846283973849 0.089921987087251701 -3.4887165487219898;-0.39537172373528351 1.005315929797288 0.010507984707800389 -1.1052395141019595 -0.014525798313026993 0.66835302606912816 0.0939317357124764 -0.18468935569891734 -0.25201329578878084 -0.51504641071055568 -0.55577574360434145 0.38432343011645287 -0.039827248666366027 0.20701541116960723 -0.25353497168003591 1.6615415172258095 -0.13091583024753753 0.01747848322261749 0.36524580433898041;0.53368977074784874 1.3802976005438727 1.097658086431804 -1.9450243277463899 -0.2009163307113899 -0.03388586863442776 -0.42399157855128056 -0.65277539389355044 0.15716099610438991 0.70513310949421493 -0.20807185034140266 -0.55873889577662506 0.2650761171854773 -0.33409457133571313 -0.14575763370816949 0.16416443311892712 0.029643987222103648 0.078635222989328887 -0.14817726122253963;-0.46994636001785267 -0.2908952687782001 -0.063580353004907927 -0.18104862574051772 0.20305009021101456 -0.42445159633668827 0.12823277707570899 -0.324338180261659 -0.44062747774027206 0.42097464247381838 -0.18628816589925787 -0.0087153662098531162 0.077426399841842838 -0.13487414183159205 0.25368234417806762 -0.80734352353338856 -0.72545556575113757 -0.25286798288683576 -1.7437287886605113];

% Layer 2
b2 = [0.063161168976794205;-1.2210132041088526;1.0406107016109731];
LW2_1 = [-0.38384479993915249 -0.098247623735151113 -1.125022506795037 -6.709797292172146 3.6387070465378857 2.2997307053176872 0.90891163858960888 1.5282662334122932 -1.3531754707150567 -0.50829784969026925;0.21574325316134707 0.24392133856681308 1.4056085872950959 7.9820547484857869 -3.5957564858281965 -1.6572955127096987 -1.4677191149164563 -0.79698518487525805 1.1152989461808456 1.3429811353047101;0.86906120757610439 -0.88442231858636033 0.49265876586620633 -1.7848952709377237 0.31183026002070802 0.12787621395022011 0.91202289809483539 -0.33733579795276314 0.6876552589743441 -1.200001852448382];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = removeconstantrows_apply(x1,x1_step1);
xp1 = mapminmax_apply(xp1,x1_step2);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = softmax_apply(repmat(b2,1,Q) + LW2_1*a1);

% Output 1
y1 = a2;
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings)
y = x(settings.keep,:);
end

% Competitive Soft Transfer Function
function a = softmax_apply(n,~)
if isa(n,'gpuArray')
    a = iSoftmaxApplyGPU(n);
else
    a = iSoftmaxApplyCPU(n);
end
end
function a = iSoftmaxApplyCPU(n)
nmax = max(n,[],1);
n = bsxfun(@minus,n,nmax);
numerator = exp(n);
denominator = sum(numerator,1);
denominator(denominator == 0) = 1;
a = bsxfun(@rdivide,numerator,denominator);
end
function a = iSoftmaxApplyGPU(n)
nmax = max(n,[],1);
numerator = arrayfun(@iSoftmaxApplyGPUHelper1,n,nmax);
denominator = sum(numerator,1);
a = arrayfun(@iSoftmaxApplyGPUHelper2,numerator,denominator);
end
function numerator = iSoftmaxApplyGPUHelper1(n,nmax)
numerator = exp(n - nmax);
end
function a = iSoftmaxApplyGPUHelper2(numerator,denominator)
if (denominator == 0)
    a = numerator;
else
    a = numerator ./ denominator;
end
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end
